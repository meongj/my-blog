---
import { getCollection } from 'astro:content';
import Card from '../components/Card.astro';
import '../styles/cardList.css';

const allPosts = await getCollection('posts');
const { posts } = Astro.props;

let sortedAllPosts = [];
let sortedPosts = [];

// console.log('전체 포스팅 수', allPosts.length);
// 최신순으로 정렬
if (allPosts && allPosts.length > 0) {
  sortedAllPosts = [...allPosts].sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  );
}

if (posts && posts.length > 0) {
  sortedPosts = [...posts].sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  );
}
---

<div>
  <div class="post-header">
    <div class="post-title">
      <h4>전체글</h4>
      <span>({posts ? posts.length : allPosts.length})</span>
    </div>
    <hr />
  </div>

  <div class="cards">
    {
      posts && posts.length > 0 ? (
        sortedPosts.map((post) => (
          <Card
            title={post.data.title}
            description={post.data.description}
            date={post.data.date}
            category={post.data.category}
            image={post.data.image}
            slug={post.data.slug}
            type="section"
          />
        ))
      ) : allPosts && allPosts.length > 0 ? (
        sortedAllPosts.map((post) => (
          <Card
            title={post.data.title}
            description={post.data.description}
            date={post.data.date}
            category={post.data.category}
            image={post.data.image}
            slug={post.data.slug}
          />
        ))
      ) : (
        <p class="empty-message">포스트가 없습니다.</p>
      )
    }
  </div>
</div>
